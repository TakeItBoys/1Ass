&НаКлиенте
Процедура ШтрихКодОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
КонецПроцедуры

&НаКлиенте
Процедура ОчитститьПоля()
	Объект.Номенклатура = ВозвратПустойНоменклатуры();
	Объект.Цена = 0;
	Объект.Количество = 0;
	Объект.ШтрихКод = "";
	ЭтаФорма.ТекущийЭлемент = Элементы.ШтрихКод;
КонецПроцедуры

&НаСервере
Функция ВозвратПустойНоменклатуры()
	Возврат Справочники.Номенклатура.ПустаяСсылка();	
КонецФункции

&НаСервере
Функция ЗаполнитьДанныеФормы(ШтрихКод)
	Запрос = новый Запрос("ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод,
	|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Штрихкод = &ШтрихКод");
	Запрос.УстановитьПараметр("ШтрихКод",ШтрихКод);
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		_ШтрихКод = ШтрихКод;		
		_Номенклатура = Результат.Выгрузить()[0].Номенклатура;
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатурыСрезПоследних
		|ГДЕ
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура = &Номенклатура
		|	И ЦеныНоменклатурыСрезПоследних.ВидЦены = &ВидЦены");
		Запрос.УстановитьПараметр("Номенклатура",_Номенклатура);
		Запрос.УстановитьПараметр("ВидЦены",Справочники.ВидыЦен.НайтиПоНаименованию("Розничная"));
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда
			_Цена = Результат.Выгрузить()[0].Цена;
			Запрос = новый Запрос("ВЫБРАТЬ
			|	ТоварыНаСкладахОстатки.ВНаличииОстаток КАК ВНаличииОстаток
			|ИЗ
			|	РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки
			|ГДЕ
			|	ТоварыНаСкладахОстатки.Номенклатура = &Номенклатура
			|	И ТоварыНаСкладахОстатки.Склад = &Склад");
			Запрос.УстановитьПараметр("Номенклатура",_Номенклатура);
			Запрос.УстановитьПараметр("Склад",Константы.ТекущийСклад.Получить());
			Результат = Запрос.Выполнить();
			Если НЕ Результат.Пустой() Тогда
				_Количество = Результат.Выгрузить()[0].ВНаличииОстаток;
			Иначе
				_Количество = 0;
			КонецЕсли;
			
			Объект.Номенклатура = _Номенклатура;
			Объект.ШтрихКод = _ШтрихКод;
			Объект.Количество = _Количество;
			Объект.Цена = _Цена;
			Возврат Истина;
		Иначе
			Сообщить("Цена по указаному товару не была найдена");
			Возврат Ложь;
		КонецЕсли;
	Иначе
		Сообщить("Товар по указаному шрихкоду не был найден.");
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//ЭтаФорма.ТекущийЭлемент = Элементы.ШтрихКод;
	ИспользоватьПодключаемоеОборудование = Истина;
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтаФорма, "СканерШтрихкода");
КонецПроцедуры

&НаКлиенте
Процедура ПриАктивизации(Элемент)
	//ЭтаФорма.ТекущийЭлемент = Элементы.ШтрихКод;
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если Источник = "ПодключаемоеОборудование" Тогда
		Если ИмяСобытия = "ScanData" И МенеджерОборудованияУТКлиент.ЕстьНеобработанноеСобытие() Тогда
			ОчитститьПоля();
			Триггер = ЗаполнитьДанныеФормы(Параметр[0]);
			Если Триггер = Истина тогда
				ПодключитьОбработчикОжидания("ОчитститьПоля", 10, истина);
			КонецЕсли;			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

